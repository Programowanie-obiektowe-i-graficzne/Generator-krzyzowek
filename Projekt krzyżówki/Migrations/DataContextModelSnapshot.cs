// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projekt_krzyżówki.Data;

#nullable disable

namespace Projekt_krzyżówki.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.9");

            modelBuilder.Entity("Projekt_krzyżówki.Models.MODELS.Krzyzowka", b =>
                {
                    b.Property<int>("Id_Krzyzowki")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UzytkownikId_Uzytkownik")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id_Krzyzowki");

                    b.HasIndex("UzytkownikId_Uzytkownik");

                    b.ToTable("Krzyzowki");
                });

            modelBuilder.Entity("Projekt_krzyżówki.Models.MODELS.Pytania", b =>
                {
                    b.Property<int>("Id_Pytania")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Kategoria")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SlowoId_Slowa")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tresc")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Trudnosc")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id_Pytania");

                    b.HasIndex("SlowoId_Slowa");

                    b.ToTable("Pytania");
                });

            modelBuilder.Entity("Projekt_krzyżówki.Models.MODELS.Pytania_Krzyzowki", b =>
                {
                    b.Property<int>("Id_Pytania")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id_Krzyzowki")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id_Pytania", "Id_Krzyzowki");

                    b.ToTable("Pytania_Krzyzowkis");
                });

            modelBuilder.Entity("Projekt_krzyżówki.Models.MODELS.Slowa", b =>
                {
                    b.Property<int>("Id_Slowa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Anagram")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Kategoria")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Podkategoria")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id_Slowa");

                    b.ToTable("Slowa");
                });

            modelBuilder.Entity("Projekt_krzyżówki.Models.MODELS.Uzytkownik", b =>
                {
                    b.Property<int>("Id_Uzytkownik")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Rozwiazane")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id_Uzytkownik");

                    b.ToTable("Uzytkownicy");
                });

            modelBuilder.Entity("Projekt_krzyżówki.Models.MODELS.Krzyzowka", b =>
                {
                    b.HasOne("Projekt_krzyżówki.Models.MODELS.Uzytkownik", "Uzytkownik")
                        .WithMany()
                        .HasForeignKey("UzytkownikId_Uzytkownik")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Uzytkownik");
                });

            modelBuilder.Entity("Projekt_krzyżówki.Models.MODELS.Pytania", b =>
                {
                    b.HasOne("Projekt_krzyżówki.Models.MODELS.Slowa", "Slowo")
                        .WithMany()
                        .HasForeignKey("SlowoId_Slowa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Slowo");
                });

            modelBuilder.Entity("Projekt_krzyżówki.Models.MODELS.Pytania_Krzyzowki", b =>
                {
                    b.HasOne("Projekt_krzyżówki.Models.MODELS.Krzyzowka", "Krzyzowka")
                        .WithMany("ListaPytan")
                        .HasForeignKey("Id_Pytania")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projekt_krzyżówki.Models.MODELS.Pytania", "Pytanie")
                        .WithMany("ListaKrzyzowek")
                        .HasForeignKey("Id_Pytania")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Krzyzowka");

                    b.Navigation("Pytanie");
                });

            modelBuilder.Entity("Projekt_krzyżówki.Models.MODELS.Krzyzowka", b =>
                {
                    b.Navigation("ListaPytan");
                });

            modelBuilder.Entity("Projekt_krzyżówki.Models.MODELS.Pytania", b =>
                {
                    b.Navigation("ListaKrzyzowek");
                });
#pragma warning restore 612, 618
        }
    }
}
